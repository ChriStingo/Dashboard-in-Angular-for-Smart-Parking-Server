{"ast":null,"code":"import _asyncToGenerator from \"/home/chris/Documents/Dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../pie-chart/pie-chart.component\";\nimport * as i4 from \"../line-chart/line-chart.component\";\n\nfunction DashboardComponent_app_pie_chart_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-pie-chart\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pieChartData\", ctx_r0.pieData);\n  }\n}\n\nfunction DashboardComponent_app_line_chart_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-line-chart\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"lineChartData\", ctx_r1.lineData);\n  }\n}\n\nfunction DashboardComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_20_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.closed = false;\n    });\n    i0.ɵɵtext(4, \"x\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h2\");\n    i0.ɵɵtext(6, \"Server closed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"Closing this pop-up you can see the last parking status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DashboardComponent_div_21_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    const i_r9 = ctx_r12.index;\n    const park_r8 = ctx_r12.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate2(\"car \", ctx_r10.animations[i_r9], \" index\", i_r9, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", park_r8, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.Brands[i_r9]);\n  }\n}\n\nfunction DashboardComponent_div_21_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵtext(2, \"empty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵtext(4, \"spot\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r9 = i0.ɵɵnextContext().index;\n    i0.ɵɵclassMapInterpolate1(\"empty index\", i_r9, \"\");\n  }\n}\n\nfunction DashboardComponent_div_21_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DashboardComponent_div_21_ng_container_1_div_1_Template, 5, 6, \"div\", 22);\n    i0.ɵɵtemplate(2, DashboardComponent_div_21_ng_container_1_div_2_Template, 5, 3, \"div\", 22);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const park_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", park_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !park_r8);\n  }\n}\n\nfunction DashboardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, DashboardComponent_div_21_ng_container_1_Template, 3, 2, \"ng-container\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.Parks);\n  }\n}\n\nfunction DashboardComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.connect();\n    });\n    i0.ɵɵtext(1, \"Connect\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class DashboardComponent {\n  // Contructor, called when whe dashboard is open\n  constructor() {\n    // Connection data\n    this.connection = false;\n    this.connectionStatus = 'Not connected';\n    this.reconnect = false;\n    this.server = \"127.0.0.1\";\n    this.port = \"8080\"; // Charts data\n\n    this.pieData = [];\n    this.lineData = [{\n      data: [0],\n      label: 'Waiting time (second)'\n    }]; // Parking data\n\n    this.Parks = [];\n    this.Brands = [];\n    this.animations = [];\n    this.parkingNumber = 'Undefined';\n    this.queueNumber = '0';\n    this.closed = false;\n  } // Close connection, changing Output data and showing pop-up\n\n\n  close() {\n    this.connectionStatus = 'Server Closed';\n    this.queueNumber = '0';\n    this.closed = true; // alert for user\n\n    this.reconnect = true; // display button\n  } // Send the http GET request to server on port, return response (data or STOP)\n\n\n  sendRequest(s) {\n    return new Promise(resolve => {\n      let response = '';\n\n      try {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', 'http://' + this.server + ':' + this.port + '/' + s, true); // sync request\n\n        xhr.onerror = function () {\n          close();\n        };\n\n        xhr.onreadystatechange = function () {\n          if (this.readyState == 4) {\n            if (this.status == 200) resolve(this.responseText);else {\n              close(); // server closed\n\n              resolve(\"STOP\");\n            }\n          }\n        };\n\n        xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n\n        xhr.ontimeout = function () {\n          resolve(\"STOP\");\n        };\n\n        xhr.send(null); //return response;\n      } catch (e) {// server already closed, STOP is keyword sent by server if he is going to close, no difference for caller\n        //return \"STOP\";\n      }\n    });\n  } // Prepare output to display, remove old elements, add new elements but not changing others\n\n\n  settingOutput(tmpParks, tmpBrands) {\n    // output arrays\n    let newParks = new Array(+this.parkingNumber);\n    let newBrands = new Array(+this.parkingNumber);\n    this.animations = []; // find unchanged park spot -> O(n + O(indexOf))\n\n    for (let i = 0; i < tmpParks.length; i++) {\n      let index = this.Parks.indexOf(tmpParks[i]); // index of new car inside old Parks\n\n      if (index != -1) {\n        // if was there\n        newParks[index] = tmpParks[i]; // leave it in the same spot\n\n        newBrands[index] = tmpBrands[i]; // every car -> its brand\n\n        tmpParks.splice(i, 1); // remove element from tmp array\n\n        tmpBrands.splice(i, 1);\n        i--;\n      }\n    } // insert new cars -> cost is inverse propotional of the overlying function, worst case O((n*(n+1))/2) = O(n*n)\n\n\n    for (let i = 0; i < tmpParks.length; i++) {\n      // for any other car\n      for (let j = i; j < +this.parkingNumber; j++) {\n        // find empty spot\n        if (typeof newParks[j] === \"undefined\") {\n          // add new car and brand\n          newParks[j] = tmpParks[i];\n          newBrands[j] = tmpBrands[i];\n          this.animations[j] = \"animation\"; // configure animation for this spot\n\n          break; // go to next car\n        }\n      }\n    } // output\n\n\n    this.Parks = newParks;\n    this.Brands = newBrands;\n  } // Polling to server retrieving data\n\n\n  retrieveData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      do {\n        // Request to server to retrieve Parks, queueNumber and AvgQueueTime. Separate by ;\n        let response2 = yield _this.sendRequest('park').then();\n        let response = response2.split(';');\n\n        if (response[0] == \"STOP\") {\n          // server stopped\n          _this.close();\n\n          continue;\n        } // update parking data\n\n\n        let tmpParks = Object.keys(JSON.parse(response[0].toUpperCase()));\n        let carsIn = tmpParks.length; // tmpParks will change with this.settingOutput() function\n\n        _this.queueNumber = response[1];\n\n        _this.settingOutput(tmpParks, Object.values(JSON.parse(response[0]))); // tmpParks and tmpBrands\n        // Charts data\n\n\n        _this.pieData = [carsIn, +_this.parkingNumber - carsIn];\n        if (((_a = _this.lineData[0].data) === null || _a === void 0 ? void 0 : _a.length) == 29) // if line chart is full, empty it\n          _this.lineData[0].data = [];\n        (_b = _this.lineData[0].data) === null || _b === void 0 ? void 0 : _b.push(+response[2] / 10); // polling delay\n\n        yield new Promise(f => setTimeout(f, 2000)); // time in millisec.\n      } while (!_this.closed); // while server is open\n\n    })();\n  } // Main function, called by Connect button\n\n\n  connect() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let infoData = yield _this2.sendRequest('info').then();\n\n      if (infoData != \"STOP\") {\n        // server is not closed\n        _this2.parkingNumber = infoData;\n        _this2.Parks = new Array(+_this2.parkingNumber);\n        _this2.connection = true;\n        _this2.reconnect = false;\n        _this2.closed = false;\n        _this2.connectionStatus = 'Connected';\n\n        _this2.retrieveData(); // start polling to retrieve data\n\n      } else _this2.close(); // server already closed\n\n    })();\n  }\n\n  ngOnInit() {}\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)();\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 23,\n  vars: 15,\n  consts: [[1, \"title\"], [\"type\", \"text\", \"placeholder\", \"Port\", 1, \"port\", 3, \"readonly\", \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Server\", 1, \"server\", 3, \"readonly\", \"ngModel\", \"ngModelChange\"], [1, \"info\"], [1, \"left\"], [1, \"center\"], [1, \"spanNumber\"], [1, \"right\"], [1, \"spanQueue\"], [3, \"pieChartData\", 4, \"ngIf\"], [3, \"lineChartData\", 4, \"ngIf\"], [\"class\", \"closed\", 4, \"ngIf\"], [\"class\", \"parkStatus\", 4, \"ngIf\"], [\"class\", \"connect\", 3, \"click\", 4, \"ngIf\"], [3, \"pieChartData\"], [3, \"lineChartData\"], [1, \"closed\"], [1, \"overlay\"], [1, \"popup\"], [1, \"close\", 3, \"click\"], [1, \"parkStatus\"], [4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngIf\"], [1, \"plate\"], [1, \"brand\"], [1, \"connect\", 3, \"click\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\");\n      i0.ɵɵelementStart(1, \"h1\", 0);\n      i0.ɵɵtext(2, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.port = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.server = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵtext(7, \" Status: \");\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtext(11, \" Number of parks: \");\n      i0.ɵɵelementStart(12, \"span\", 6);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵtext(15, \" Cars in queue: \");\n      i0.ɵɵelementStart(16, \"span\", 8);\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, DashboardComponent_app_pie_chart_18_Template, 1, 1, \"app-pie-chart\", 9);\n      i0.ɵɵtemplate(19, DashboardComponent_app_line_chart_19_Template, 1, 1, \"app-line-chart\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, DashboardComponent_div_20_Template, 9, 0, \"div\", 11);\n      i0.ɵɵtemplate(21, DashboardComponent_div_21_Template, 2, 1, \"div\", 12);\n      i0.ɵɵtemplate(22, DashboardComponent_button_22_Template, 2, 0, \"button\", 13);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"readonly\", ctx.connection && !ctx.reconnect)(\"ngModel\", ctx.port);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"readonly\", ctx.connection && !ctx.reconnect)(\"ngModel\", ctx.server);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassMapInterpolate1(\"status_\", ctx.connectionStatus == \"Connected\", \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.connectionStatus);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.parkingNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.queueNumber);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.connection == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.connection == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.closed);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.connection == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.connection || ctx.reconnect);\n    }\n  },\n  directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgIf, i3.PieChartComponent, i4.LineChartComponent, i2.NgForOf],\n  styles: [\"*[_ngcontent-%COMP%] {\\n    margin: 0;\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n    height: 100%;\\n    width: 100%;\\n}\\n\\nheader[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin-left: 10%;\\n    height: 80px;\\n    background-color: rgb(24, 108, 209);\\n    margin-top: -10px;\\n    border-radius: 15px;\\n    margin-bottom: 25px;\\n}\\n\\n.title[_ngcontent-%COMP%], .server[_ngcontent-%COMP%], .port[_ngcontent-%COMP%] {\\n    display: inline-block;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n    color: white;\\n    font-weight: bold;\\n    font-size: 40px;\\n    margin-left: 25px;\\n    margin-top: 20px;\\n}\\n\\n.port[_ngcontent-%COMP%] {\\n    width: 100px;\\n}\\n\\n.server[_ngcontent-%COMP%], .port[_ngcontent-%COMP%]{\\n    margin-top: 30px;\\n    float: right;\\n    margin-right: 25px;\\n    height: 30px;\\n    font-size: 16px;\\n    border-width: 1px;\\n    border-color: #CCCCCC;\\n    background-color: #FFFFFF;\\n    color: #000000;\\n    border-style: solid;\\n    border-radius: 5px;\\n    box-shadow: 0px 0px 5px rgba(66,66,66,.75);\\n}\\n\\n.server[_ngcontent-%COMP%]:read-only, .port[_ngcontent-%COMP%]:read-only {\\n    color: grey;\\n    background-color: #f3f3f3;\\n  }\\n\\n.server[_ngcontent-%COMP%]:focus, .port[_ngcontent-%COMP%]:focus {\\n    outline:none;\\n}\\n\\n.info[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin-left: 10%;\\n    background-color: #fff;\\n    font-size: 30px;\\n    margin-bottom: 30px;\\n}\\n\\n.left[_ngcontent-%COMP%] {\\n    text-align: left;\\n    display: inline-block;\\n    width: 30%;\\n}\\n\\n.center[_ngcontent-%COMP%] {\\n    text-align: center;\\n    display: inline-block;\\n    width: 30%;\\n    margin-left: 5%;\\n}\\n\\n.right[_ngcontent-%COMP%] {\\n    text-align: right;\\n    display: inline-block;\\n    width: 30%;\\n    margin-left: 5%;\\n}\\n\\n.parkStatus[_ngcontent-%COMP%] {\\n    border-radius: 15px;\\n    width: 80%;\\n    margin-left: 10%;\\n    margin-bottom: 80px;\\n    background-color: rgb(231, 231, 231);\\n}\\n\\n.car[_ngcontent-%COMP%] {\\n    border-radius: 15px;\\n    text-align: center;\\n    width: 21%;\\n    margin-left: 2%;\\n    margin-right: 2%;\\n    height: 50px;\\n    margin-bottom: 10px;\\n    display: inline-block;\\n    background-color: rgba(255, 0, 0, 0.6);\\n}\\n\\n.animation[_ngcontent-%COMP%] {\\n    animation-name: glow;\\n    animation-duration: 1.5s;\\n}\\n\\n@keyframes glow {\\n    0%   {background-color: rgba(255, 0, 0, 0.6)}\\n    5%  {background-color: rgba(24, 108, 209, 0.5)}\\n    50%  {background-color: rgba(255, 0, 0, 0.6)}\\n    100%  {background-color: rgba(255, 0, 0, 0.6)}\\n  }\\n\\n.plate[_ngcontent-%COMP%] {\\n    font-size: 25px; \\n    margin-bottom: -5px;  \\n}\\n\\n.brand[_ngcontent-%COMP%] {\\n    font-size: 10px;\\n    overflow: hidden;\\n}\\n\\n.empty[_ngcontent-%COMP%] {\\n    border-radius: 15px;\\n    font-size: 25px;\\n    text-align: center;\\n    width: 21%;\\n    margin-left: 2%;\\n    margin-right: 2%;\\n    margin-bottom: 10px;\\n    height: 50px;\\n    display: inline-block;\\n    background-color: rgba(0, 189, 0, 0.7);\\n}\\n\\n.index0[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n}\\n\\n.overlay[_ngcontent-%COMP%] {\\n    position: fixed;\\n    display: show;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background: rgba(0, 0, 0, 0.8);\\n    z-index: 9999;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 10px;\\n    right: 10px;\\n    z-index: 99;\\n    width: 25px;\\n    height: 25px;\\n    cursor: pointer;\\n    color: #fff;\\n    display: inline-block;\\n}\\n\\n.popup[_ngcontent-%COMP%] {\\n    position: absolute;\\n    width: 50%;\\n    height: 100px;\\n    top: 25%;\\n    left: 25%;\\n    text-align: center;\\n    border-radius: 10px;\\n    background: white;\\n    box-shadow: 0px 0px 10px 0px black;\\n}\\n\\n.popup[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-size: 15px;\\n    height: 50px;\\n    line-height: 50px;\\n    color: #fff;\\n    background: rgb(24, 108, 209);\\n    border-radius: 10px 10px 0px 0px;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n    width: 50px;\\n    height: 50px;\\n    color: #fff;\\n    font-weight: bolder;\\n    border-radius: 10px;\\n    background: silver;\\n}\\n\\n.connect[_ngcontent-%COMP%] {\\n    position: fixed;\\n    z-index: 3;\\n    left: 10%;\\n    bottom: 25px;\\n    width: 80%;\\n    height: 30px;\\n    font-size: 16px;\\n    border-width: 1px;\\n    border-color: #929292;\\n    background-color: #f0f0f0;\\n    color: #000000;\\n    border-style: solid;\\n    border-radius: 5px;\\n    box-shadow: 0px 0px 5px rgba(66,66,66,.75);\\n}\\n\\n.connect[_ngcontent-%COMP%]:hover {\\n    background-color: rgba(24, 108, 209, 1);\\n    color: white;\\n}\\n\\n.status_true[_ngcontent-%COMP%] {\\n    color: green;\\n    font-weight: bold;\\n}\\n\\n.status_false[_ngcontent-%COMP%] {\\n    color: red;\\n    font-weight: bold;\\n}\\n\\n.spanQueue[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n}\\n\\n@media screen and (max-width: 890px) {\\n    .left[_ngcontent-%COMP%], .center[_ngcontent-%COMP%], .right[_ngcontent-%COMP%] {\\n        text-align: left;\\n        display: block;\\n        width: 100%;\\n        margin-left: 0;\\n    }\\n    .info[_ngcontent-%COMP%] {\\n        font-size: 20px;\\n    }\\n    .plate[_ngcontent-%COMP%] {\\n        margin-top: 8px;\\n        margin-bottom: 0;\\n    }\\n    .plate[_ngcontent-%COMP%], .empty[_ngcontent-%COMP%] {\\n        font-size: 13px;\\n    }\\n    .brand[_ngcontent-%COMP%] {\\n        font-size: 8px;\\n    }\\n    .spanNumber[_ngcontent-%COMP%], .spanQueue[_ngcontent-%COMP%], .status_false[_ngcontent-%COMP%], .status_true[_ngcontent-%COMP%] {\\n        position: absolute;\\n        right: 10%;\\n    }\\n    header[_ngcontent-%COMP%] {\\n        margin: 0;\\n        margin-top: -15px;\\n        width: 100%;\\n        margin-bottom: 15px;\\n    }\\n    .title[_ngcontent-%COMP%] {\\n        display: none;\\n    }\\n    .port[_ngcontent-%COMP%] {\\n        width: 15%;\\n        margin-right: 10px;\\n    }\\n    .server[_ngcontent-%COMP%] {\\n        float: left;\\n        margin-left: 10px;\\n        margin-right: auto;\\n        width: 75%;\\n    }\\n    .popup[_ngcontent-%COMP%] {\\n        width: 80%;\\n        left: 10%;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"]\n});","map":{"version":3,"sources":["/home/chris/Documents/Dashboard/src/app/dashboard/dashboard.component.ts","/home/chris/Documents/Dashboard/src/app/dashboard/dashboard.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets } from 'chart.js';\nimport { SingleDataSet } from 'ng2-charts';\n\n// Used for AJAX\ndeclare var xhr: XMLHttpRequest;\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css'],\n})\n\nexport class DashboardComponent implements OnInit {\n    // Connection data\n    connection: boolean;        // if there is/was at least one connection\n    connectionStatus: String;   // Output data\n    reconnect: boolean;         // if connecton ends\n    server: String;             // server address\n    port: String;               // server port\n\n    // Charts data\n    pieData: SingleDataSet;     // @Input in pie-data-component\n    lineData: ChartDataSets[];  // @Input in line-chart-component\n\n    // Parking data\n    Parks: string[];            // Output data, all the parking spot\n    Brands: string[];           // Output data, brands for parking spot\n    parkingNumber: String;      // Output data\n    queueNumber: String;        // Output data\n    closed: boolean;            // server status\n    animations: string[];       // Output data, for css\n\n    // Close connection, changing Output data and showing pop-up\n    private close() {\n        this.connectionStatus = 'Server Closed';\n        this.queueNumber = '0';\n        this.closed = true;     // alert for user\n        this.reconnect = true;  // display button\n    }\n\n    // Send the http GET request to server on port, return response (data or STOP)\n    private sendRequest(s: string) {\n        return new Promise((resolve) => {\n        let response: string = '';\n        try {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', 'http://' + this.server + ':' + this.port + '/' + s, true); // sync request\n            xhr.onerror = function () {     // server closed\n                close();\n            };\n            xhr.onreadystatechange = function () {\n                if (this.readyState == 4) {\n                    if (this.status == 200) resolve(this.responseText);\n                    else {\n                        close();   // server closed\n                        resolve(\"STOP\");\n                    }\n                }\n            };\n            xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n            xhr.ontimeout = function () { resolve(\"STOP\"); }\n            xhr.send(null);\n            //return response;\n        } catch (e) {\n            // server already closed, STOP is keyword sent by server if he is going to close, no difference for caller\n            //return \"STOP\";\n        }\n        });\n    }\n\n    // Prepare output to display, remove old elements, add new elements but not changing others\n    private settingOutput(tmpParks: string[], tmpBrands: string[]) {\n        // output arrays\n        let newParks = new Array(+this.parkingNumber);\n        let newBrands = new Array(+this.parkingNumber);\n        this.animations = [];\n\n        // find unchanged park spot -> O(n + O(indexOf))\n        for (let i = 0; i < tmpParks.length; i++) {\n            let index = this.Parks.indexOf(tmpParks[i]);    // index of new car inside old Parks\n            if (index != -1) {                              // if was there\n                newParks[index] = tmpParks[i];              // leave it in the same spot\n                newBrands[index] = tmpBrands[i];            // every car -> its brand\n                tmpParks.splice(i, 1);                      // remove element from tmp array\n                tmpBrands.splice(i, 1);\n                i--;\n            }\n        }\n\n        // insert new cars -> cost is inverse propotional of the overlying function, worst case O((n*(n+1))/2) = O(n*n)\n        for (let i = 0; i < tmpParks.length; i++) {             // for any other car\n            for (let j = i; j < +this.parkingNumber; j++) {     // find empty spot\n                if (typeof newParks[j] === \"undefined\") {       // add new car and brand\n                    newParks[j] = tmpParks[i];\n                    newBrands[j] = tmpBrands[i];\n                    this.animations[j] = \"animation\";           // configure animation for this spot\n                    break;                                      // go to next car\n                }\n            }\n        }\n\n        // output\n        this.Parks = newParks;\n        this.Brands = newBrands;\n    }\n\n    // Polling to server retrieving data\n    private async retrieveData() {\n        do {\n            // Request to server to retrieve Parks, queueNumber and AvgQueueTime. Separate by ;\n            let response2: string = await this.sendRequest('park').then();\n            let response = response2.split(';');\n            if (response[0] == \"STOP\") {                    // server stopped\n                this.close();\n                continue;\n            }\n\n            // update parking data\n            let tmpParks: string[] = Object.keys(JSON.parse(response[0].toUpperCase()));\n            let carsIn = tmpParks.length;                   // tmpParks will change with this.settingOutput() function\n            this.queueNumber = response[1];\n            this.settingOutput(tmpParks, Object.values(JSON.parse(response[0])));   // tmpParks and tmpBrands\n\n\n            // Charts data\n            this.pieData = [\n                carsIn,\n                +this.parkingNumber - carsIn\n            ];\n            if (this.lineData[0].data?.length == 29)        // if line chart is full, empty it\n                this.lineData[0].data = [];\n            this.lineData[0].data?.push(+response[2] / 10);\n\n            // polling delay\n            await new Promise((f) => setTimeout(f, 2000));  // time in millisec.\n        } while (!this.closed);     // while server is open\n    }\n\n    // Main function, called by Connect button\n    async connect() {\n        let infoData: string = await this.sendRequest('info').then();\n        if (infoData != \"STOP\") {    // server is not closed\n            this.parkingNumber = infoData;\n            this.Parks = new Array(+this.parkingNumber);\n            this.connection = true;\n            this.reconnect = false;\n            this.closed = false;\n            this.connectionStatus = 'Connected';\n            this.retrieveData();    // start polling to retrieve data\n        } else\n            this.close();           // server already closed\n    }\n\n    // Contructor, called when whe dashboard is open\n    constructor() {\n        // Connection data\n        this.connection = false;\n        this.connectionStatus = 'Not connected';\n        this.reconnect = false;\n        this.server = \"127.0.0.1\";\n        this.port = \"8080\";\n\n        // Charts data\n        this.pieData = [];\n        this.lineData = [{ data: [0], label: 'Waiting time (second)' }];\n\n        // Parking data\n        this.Parks = [];\n        this.Brands = [];\n        this.animations = [];\n        this.parkingNumber = 'Undefined';\n        this.queueNumber = '0';\n        this.closed = false;\n    }\n\n    ngOnInit() { }\n}\n","<header>\n    <h1 class=\"title\">Dashboard</h1>\n    <!-- Inverse order, float: right on css -->\n    <input class=\"port\" type=\"text\" placeholder=\"Port\" [readonly]=\"connection && !reconnect\" [(ngModel)]=\"port\">\n    <input class=\"server\" type=\"text\" placeholder=\"Server\" [readonly]=\"connection && !reconnect\" [(ngModel)]=\"server\">\n</header>\n\n<div class=\"info\"> \n    <div class=\"left\">\n        Status: <span class=\"status_{{ (connectionStatus == 'Connected') }}\">{{ connectionStatus }}</span>\n    </div>\n    <div class=\"center\">\n        Number of parks: <span class=\"spanNumber\">{{ parkingNumber }}</span>\n    </div>\n    <div class=\"right\">\n        Cars in queue: <span class=\"spanQueue\">{{ queueNumber }}</span>\n    </div>\n    <app-pie-chart [pieChartData]=\"pieData\" *ngIf=\"connection == true\"></app-pie-chart>\n    <!-- charts: https://www.positronx.io/angular-chart-js-tutorial-with-ng2-charts-examples/ -->\n    <app-line-chart [lineChartData]=\"lineData\" *ngIf=\"connection == true\"></app-line-chart>\n</div>\n\n<div class=\"closed\" *ngIf=\"closed\">\n    <div class='overlay'>\n        <div class='popup'>\n            <div class='close' (click)=\"closed=false\">x</div>\n            <h2>Server closed</h2>\n            <p>Closing this pop-up you can see the last parking status</p>\n        </div>\n    </div>\n</div>\n\n<div class=\"parkStatus\" *ngIf=\"connection == true\">\n    <ng-container *ngFor=\"let park of Parks; let i = index\">\n        <div class=\"car {{animations[i]}} index{{i}}\" *ngIf=\"park\">\n            <div class='plate'>{{park}} </div>\n            <div class='brand'>{{Brands[i]}}</div>\n        </div>\n        <div class=\"empty index{{i}}\" *ngIf=\"!park\">\n            <div class='plate'>empty</div>\n            <div class='brand'>spot</div>\n        </div>\n    </ng-container>\n</div>\n\n\n\n<button class=\"connect\" *ngIf=\"!connection || reconnect\" (click)=\"connect()\">Connect</button>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}